{$DRUPAL_WEB_HOSTNAME}:{$DRUPAL_WEB_PORT:8080} {
  # Default cache policy. 1h fresh, use stale while revalidating in background for up to 24h.
  # This will usually not apply to the page itself, as Drupal sets "must-revalidate"
  header ?Cache-Control "max-age=3600, stale-while-revalidate=86400"
  # Aggressively cache aggregated CSS/JS files, as they are hashed
  @aggregated {
    path /files/css/css_*
    path /files/js/js_*
  }
  header @aggregated >Cache-Control "max-age=31536000, immutable"

  # If starts with /files/ and exists as a file in $data/public, serve it
  # This is for user-uploaded and generated files (e.g. aggregated CSS/JS)
  @data_public {
    path /files/*
    file {
      root {$DRUPAL_DATA_PATH:./data}/public
      try_files {path}
    }
  }
  handle @data_public {
    root * {$DRUPAL_DATA_PATH:./data}/public
    file_server
  }

  # Else, if it's not php and exists as a file in $app/web, serve it
  # These are for non-aggregated module/drupal assets (e.g. theme fonts)
  @static_drupal {
    not path *.php
    file {
      root {$DRUPAL_APP_ROOT:.}/web
      try_files {path}
    }
  }
  handle @static_drupal {
    root * {$DRUPAL_APP_ROOT:.}/web
    file_server
  }

  # If it's /core/install.php, allow just that
  # You can respond with a 403 if you want to block this
  # Or just remove the entire '@install' and 'handle install' blocks
  @install {
    path /core/install.php
  }
  handle @install {
    root * {$DRUPAL_APP_ROOT:.}/web
    # error 403
    php_fastcgi unix//tmp/drupal12factor-fpm.sock
  }

  # For everything else, run php fpm in $app/web/index.php; thus going through the php router
  # This includes pages that never exist as files, as well as files that
  # will be generated after php handles it once (e.g. aggregated CSS/JS)
  handle {
    root * {$DRUPAL_APP_ROOT:.}/web
    rewrite * /index.php
    php_fastcgi unix//tmp/drupal12factor-fpm.sock
  }
}
