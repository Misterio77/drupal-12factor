#!/usr/bin/env bash

# Serves the website. By default, will serve the PHP app at localhost:8080 and the public files at localhost:8081

set -euo pipefail

function require_cmd() {
  if ! which $1 &> /dev/null; then
    echo "You need $1 to run this script."
    exit 1
  fi
}

require_cmd "php"
require_cmd "webfsd"
require_cmd "dirname"
require_cmd "realpath"


main_port="${1:-"8080"}"
files_port="${2:-"8081"}"

# We'll use the script location as reference to find "vendor" and "web" directories.
project="$(dirname "$(dirname "$(realpath -s "$0")")")"

# The following app variables are also used by the script. The rest of the app variables do not appear here as the script does not need to read them.
# DRUPAL_DATA_PATH defaults to "data" directory on the caller's pwd. It is used (here and by the app) to derive defaults for the state variables.
DRUPAL_DATA_PATH="${DRUPAL_DATA_PATH:-"$(pwd)/data"}"
# DRUPAL_FILE_PUBLIC_PATH defaults to $DRUPAL_DATA_PATH/public. It is used by the script to serve the public files, and by the app to know where to save them.
DRUPAL_FILE_PUBLIC_PATH="${DRUPAL_FILE_PUBLIC_PATH:-"$DRUPAL_DATA_PATH/public"}"

export DRUPAL_DATA_PATH DRUPAL_FILE_PUBLIC_PATH DRUPAL_FILE_PUBLIC_BASE_URL;


if [ ! -d "$project/vendor" ]; then
  echo "Vendor dir $project/vendor does not exist."
  echo "Run 'composer install' first."
  exit 1
fi


# Serve public data files with webfs, if DRUPAL_FILE_PUBLIC_BASE_URL is not already set.
if [ -z "${DRUPAL_FILE_PUBLIC_BASE_URL:-}" ]; then
  webfsd -F -p "$files_port" -r "$DRUPAL_FILE_PUBLIC_PATH" &
  DRUPAL_FILE_PUBLIC_BASE_URL="http://localhost:$files_port"
  echo "File server running ($DRUPAL_FILE_PUBLIC_BASE_URL)"
fi

php -S "localhost:$main_port" -t "$project/web/" &


trap 'kill $(jobs -p -r)' SIGINT
wait
